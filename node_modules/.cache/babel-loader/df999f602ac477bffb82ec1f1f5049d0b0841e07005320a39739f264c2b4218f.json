{"ast":null,"code":"// contains hidden letter and other letters\nimport { createCell } from \"./createCell\";\nconst couples = [[\"B\", \"D\"], [\"N\", \"M\"], [\"g\", \"q\"], [\"G\", \"6\"], [\"L\", \"I\"], [\"O\", \"0\"], [\"V\", \"U\"], [\"Z\", \"2\"], [\"F\", \"E\"], [\"K\", \"X\"], [\"p\", \"q\"], [\"B\", \"8\"], [\"W\", \"M\"], [\"S\", \"5\"]];\nexport function createBoard() {\n  const board = [];\n  const randomIdx = Math.floor(Math.random() * (couples.length - 1));\n  const randomCouple = couples[randomIdx];\n  const randomLetter = Math.random() > .5 ? 1 : 0;\n  const hiddenLetter = randomLetter === 1 ? 0 : 1;\n  const randomRow = Math.floor(Math.random() * 25);\n  const randomCol = Math.floor(Math.random() * 20);\n  for (let row = 0; row < randomRow + 1; row++) {\n    const newRow = [];\n    for (let col = 0; col < randomCol + 1; col++) {\n      newRow.push(createCell(row, col, randomCouple[randomLetter]));\n    }\n    board.push(newRow);\n  }\n  // insert random hidden letter\n  return board;\n}","map":{"version":3,"names":["createCell","couples","createBoard","board","randomIdx","Math","floor","random","length","randomCouple","randomLetter","hiddenLetter","randomRow","randomCol","row","newRow","col","push"],"sources":["/Users/resilient/Desktop/hidden-letter/src/utils/createBoard.js"],"sourcesContent":["// contains hidden letter and other letters\nimport {createCell} from \"./createCell\";\nconst couples = [\n    [\"B\", \"D\"],\n    [\"N\", \"M\"],\n    [\"g\", \"q\"],\n    [\"G\", \"6\"],\n    [\"L\", \"I\"],\n    [\"O\", \"0\"],\n    [\"V\", \"U\"],\n    [\"Z\", \"2\"],\n    [\"F\", \"E\"],\n    [\"K\", \"X\"],\n    [\"p\", \"q\"],\n    [\"B\", \"8\"],\n    [\"W\", \"M\"],\n    [\"S\", \"5\"]\n\n]\nexport function createBoard(){\n const board = [];\n const randomIdx = Math.floor(Math.random() * (couples.length - 1 ) )\n const randomCouple = couples[randomIdx];\n const randomLetter = Math.random() > .5 ? 1 : 0;\n const hiddenLetter = randomLetter === 1 ? 0 : 1;\n const randomRow = Math.floor(Math.random()* 25);\n const randomCol = Math.floor(Math.random()* 20);\n\n for (let row = 0; row < randomRow +1; row++) {\n    const newRow = [];\n    for (let col = 0; col < randomCol +1; col++){\n        newRow.push(createCell(row, col, randomCouple[randomLetter]) )\n    } \n    board.push(newRow)\n }\n // insert random hidden letter\n return board;\n}"],"mappings":"AAAA;AACA,SAAQA,UAAU,QAAO,cAAc;AACvC,MAAMC,OAAO,GAAG,CACZ,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,EACV,CAAC,GAAG,EAAE,GAAG,CAAC,CAEb;AACD,OAAO,SAASC,WAAW,GAAE;EAC5B,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIN,OAAO,CAACO,MAAM,GAAG,CAAC,CAAE,CAAE;EACpE,MAAMC,YAAY,GAAGR,OAAO,CAACG,SAAS,CAAC;EACvC,MAAMM,YAAY,GAAGL,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC;EAC/C,MAAMI,YAAY,GAAGD,YAAY,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;EAC/C,MAAME,SAAS,GAAGP,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAE,EAAE,CAAC;EAC/C,MAAMM,SAAS,GAAGR,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAE,EAAE,CAAC;EAE/C,KAAK,IAAIO,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,SAAS,GAAE,CAAC,EAAEE,GAAG,EAAE,EAAE;IAC1C,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,SAAS,GAAE,CAAC,EAAEG,GAAG,EAAE,EAAC;MACxCD,MAAM,CAACE,IAAI,CAACjB,UAAU,CAACc,GAAG,EAAEE,GAAG,EAAEP,YAAY,CAACC,YAAY,CAAC,CAAC,CAAE;IAClE;IACAP,KAAK,CAACc,IAAI,CAACF,MAAM,CAAC;EACrB;EACA;EACA,OAAOZ,KAAK;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}